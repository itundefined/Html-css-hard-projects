/* normalizing the html */
@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap');

*, *::after, *::before{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: var(--Font);
}

:root {
    --Font: 'Oswald', sans-serif;
    --containerWidth: 80vw;
    --FontSize: 15px;
    --letterSpacing: 1px;
}

.inputs, .showtasks{
    margin: auto;
    margin-top: 50px;
    width: var(--containerWidth);
    margin-bottom: 50px;
}

.inputs{
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 10px;
}

.inputs textarea {
    box-sizing: border-box;
    padding: 10px 20px;
    width: 100%;
    resize: none;
    font-family: var(--Font);
    font-weight: lighter;
    font-size: large;
    letter-spacing: var(--letterSpacing);
    box-shadow: 0 0 20px rgb(0 0 0 / 10%);
    border: solid 0.25px rgba(0, 0, 0, 10%);
} 

.userInputs:focus{
    outline: none;
    border: solid 0.25px rgb(51,102,204);
}

  
#AddTheTask, #editnow, #deleteAll{
    width: 100px;
    height: 50px;
    background-color: white;
    box-shadow: 0 0 20px rgb(0 0 0 / 10%);
    font-family: var(--Font);
    font-weight: lighter;
    font-size: var(--FontSize);
    letter-spacing: var(--letterSpacing);
    border: solid 0.25px rgba(0, 0, 0, 10%);
    cursor: pointer;
    transition: 500ms;
}

#AddTheTask, #deleteAll{
    position: relative;
    z-index: 1;
}

#AddTheTask::before{
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: -1;
    background-color: #0AF;
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 500ms ease-in-out;
}

#deleteAll::before{
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: -1;
    background-color: rgba(255, 0, 0, 80%); /*Becuase the color is getting changed here from add the task*/
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 500ms ease-in-out;
}

#AddTheTask:hover::before, #deleteAll:hover::before{
    transform: scaleX(1);
    transition: transform 500ms ease-in-out;
}

#AddTheTask:hover, #deleteAll:hover{
    color: whitesmoke;
}


#editnow:hover, .inputs button:hover{
    transition: 500ms;
    transform: scale(1.2);    
}


.spans-container{
    display: flex;
    flex-direction: column;
    position: relative;
    gap: 8px;
    margin-top: 50px;
    padding: 10px 15px;
    border: solid 1px rgba(0, 0, 0, 10%);
    border-radius: 25px;
    font-family: var(--Font);
    letter-spacing: var(--letterSpacing);
    font-size: var(--FontSize);
    font-weight: bolder;
    box-shadow: 0 0 20px rgb(0 0 0 / 10%);
    transition: 500ms;
    cursor: move;
}


/* delete multiple button --------------------------------------------------------------------------------------*/

.multipleDeletion{
    width: var(--containerWidth);
    display: flex;
    margin: 10px auto;
    align-items: center;
    gap: 5px;
}

.multipleDeletion span{
    cursor: pointer;
}

.multipleDeletion p{
    font-family: var(--Font);
    font-size: var(--FontSize);
    letter-spacing: var(--letterSpacing);
    transition: 500ms;
    border-bottom: 0.25px solid rgba(0, 0, 0, 0%);
}

.multipleDeletion span:hover+p{
    transition: 500ms;
    border-bottom: 1px solid rgba(0, 0, 0, 100%);
}



.mainTaskSpan{
    margin-top: 10px;
    font-weight: lighter;
    line-break: anywhere;
    padding: 5px;
}

.title-cross{
    width: 100%;
    display: flex;
    flex-direction: row;
    align-items: center;
}

#title {
    width: 90%;
}   

.title-cross span{
    transition: 500ms;
    cursor: pointer;
}

.title-cross span:hover{
    transform: rotate(-90deg);
    transition: 500ms;
}


.funcContainer {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    align-items: center;
    margin-top: 10px;
}

.updateIcon{
    position: relative;
    cursor: pointer;
    margin: 0;
    padding: 0;
    transition: 500ms;
}

.deleteIcon{
    position: relative;
    cursor: pointer;
    transition: 500ms;
}



.updateIcon:hover{
    transform: scale(1.10);
    transition: 400ms;
}


.deleteIcon:hover{
    transform: scale(1.10);
    transition: 400ms;
}


.deletionIndication{
    transition: 500ms;
    border: 1.50px solid rgba(255, 0, 0, 80%) !important;
}

.updationIndication{
    transition: 500ms;
    border: 1.50px solid rgba(0, 255, 0, 90%) !important;
}


.func-container {
    width: 100%;
    display: flex;
    justify-content: flex-end;
    gap: 10px;
}

.remove-item{
    transform: scale(1.10);
    opacity: 0;
}


/* Now make the editable workable--------------------------------------------------------------------------------------  */

.editable {
    display: none;
    position: fixed;
    width: 100vw;
    height: 100vh;
    text-align: center;
    background-color: rgba(0, 0, 0, 55%);
    z-index: 2;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.styling span{
    cursor: pointer;
}

.styling {
    display: flex;
    flex-direction: column;
    width: 80%;
    align-items: flex-end;
    justify-content: center;
    gap: 10px;
}

.styling textarea{
    box-sizing: border-box;
    padding: 5px;
    font-family: var(--Font);
    width: 80%;
    resize: none;
    font-weight: lighter;
    font-size: var(--FontSize);
    letter-spacing: var(--letterSpacing);
}

.giveError{
    border: 1px solid rgba(255, 0, 0, 80%) !important;
}

.title-add{
    box-sizing: border-box;
    padding: 5px;
    display: none;
    align-items: center;
    gap: 10px;
    font-family: var(--Font);
    font-size: var(--FontSize);
    letter-spacing: var(--letterSpacing);
}

.title-add #label{
    text-decoration:underline;
    font-family: var(--Font);
    font-size: var(--FontSize);
    letter-spacing: var(--letterSpacing);
    text-transform:uppercase;
}

.title-add span#close-title{
    cursor: pointer;
    transition: 500ms;
}

.title-add span#close-title:hover{
    transition: 500ms;
    transform: rotate(-90deg);
}


.header-hide-element{
    transition: 500ms;
    opacity: 0%;
}



/* Reassuring prompt */


.reassuring{
    position: fixed;
    display: none;
    top: 0;
    width: 100vw;
    height: 100vh;
    justify-content: center;
    align-items: center;
    background-color: rgba(0, 0, 0, 55%);
    z-index: 2;
}


.reassuringStyling{
    display: flex;
    gap: 20px;
    text-transform: uppercase;
    color: white;
    justify-content: center;
    align-items: center;
}

.reassuringStyling button{
    width: 90px;
    height: 40px;
    background-color: white;
    box-shadow: 0 0 20px rgb(0 0 0 / 10%);
    font-family: var(--Font);
    font-weight: lighter;
    font-size: var(--FontSize);
    letter-spacing: var(--letterSpacing);
    border: solid 0.25px rgba(0, 0, 0, 10%);
    cursor: pointer;
    transition: 500ms;
}

.reassuringActionContainer{
    display: flex;
    gap: 13px;
}


/* DropBox styling-------------------------------------------------------------------------------------- */

.dropbox{
    transition: 500ms;
    transform: translateX(-100vw);
    background-color: rgba(0, 0, 0, 33%);
    z-index: -10;
    color: white;
    width: var(--containerWidth);
    margin: 0 auto;
    box-sizing: border-box;
    padding: 10px;
}

.toggleDropBox{
    transform: translateX(0vw);
}

.menu-trigger{
    transition: 500ms;
    transform: rotateZ(0deg);
}

.rotate-it{
    transform: rotateZ(225deg);
}

.dropbox p{
    text-align: center;
}

.dropbox-func-container{
    display: flex;
    justify-content: space-between;
    align-items: center;
}


#dropbox-button-container{
    display: flex;
    justify-content: flex-end;
}

.dropbox-func-container *{
    width: calc(100% / 3);
    box-sizing: border-box;
}

.whileDragging{
    background-color: rgba(0, 0, 0, 70%);
}



/* Toggle Theme Button ------------------------------------------------------------------------------------*/

.toggle-input-container{
    width: var(--containerWidth);
    margin: 10px auto;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    gap: 10px;
}

/* The switch - the box around the slider */
.switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
  }
  
  /* Hide default HTML checkbox */
  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }
  
  /* The slider */
  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    -webkit-transition: .4s;
    transition: .4s;
  }
  
  .slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
  }
  
  input:checked + .slider {
    background-color: #2196F3;
  }
  
  input:focus + .slider {
    box-shadow: 0 0 1px #2196F3;
  }
  
  input:checked + .slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
  }
  
  /* Rounded sliders */
  .slider.round {
    border-radius: 34px;
  }
  
  .slider.round:before {
    border-radius: 50%;
  }


  
  /* Dark Theme Colors ------------------------------------------------------------------------------*/
.dark{
    background-color: rgba(0, 0, 0, 90%);
    color: white;
}

.dark textarea{
    background-color: rgba(255, 255, 255, 80%);
}

.spans-container{
    border: solid 0.25px rgba(255, 255, 255, 0.642);
}




/* For the mobile */

@media only screen and (max-width: 768px) {
    .multipleDeletion{
        display: none;
    }
    
    .dropbox{
        display: none; 
    }
  }
